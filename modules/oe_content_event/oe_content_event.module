<?php

/**
 * @file
 * The OpenEuropa Content Event module.
 */

declare(strict_types = 1);

use Drupal\Core\Form\FormStateInterface;
use Drupal\node\Entity\Node;

/**
 * Implements hook_entity_type_alter().
 */
function oe_content_event_entity_type_alter(array &$entity_types) {
  // Add validation constraints to the node entity.
  if (!empty($entity_types['node'])) {
    $entity_types['node']->addConstraint('EventFieldsRequired');
  }
}

/**
 * Implements hook_form_BASE_FORM_ID_alter().
 */
function oe_content_event_form_node_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if (!in_array($form_id, ['node_oe_event_form', 'node_oe_event_edit_form'])) {
    return;
  }

  // Add a toggle switch for "Organiser" fields.
  $form['is_organiser_internal'] = [
    '#type' => 'checkbox',
    '#title' => t('Organiser is internal'),
    '#default_value' => empty($form['oe_event_organiser_name']['widget'][0]['value']['#default_value']) ? 1 : 0,
  ];
  $form['oe_event_organiser_internal']['#states'] = [
    'visible' => [
      [
        ':input[name="is_organiser_internal"]' => ['checked' => TRUE],
        ':input[name="oe_event_organiser_name"]' => ['filled' => FALSE],
      ],
    ],
  ];
  $form['oe_event_organiser_name']['#states'] = [
    'visible' => [
      [
        ':input[name="is_organiser_internal"]' => ['checked' => FALSE],
        ':input[name="oe_event_organiser_internal"]' => ['filled' => FALSE],
      ],
    ],
  ];

  // Make sure that the toggle field we have just created
  // will be rendered under the "Organiser" field group.
  $group_id = 'group_organiser';
  $organiser_group = $form['#fieldgroups'][$group_id];
  $organiser_group->children[] = 'is_organiser_internal';
  $form['#fieldgroups'][$group_id] = $organiser_group;
  $form['#group_children']['is_organiser_internal'] = $group_id;
  // Make sure that only one organiser field value is stored based on the
  // the checkbox setting.
  $form['#entity_builders'][] = '_oe_content_event_store_organiser_value';
}

/**
 * Entity builder to make sure only one organiser value is stored.
 *
 * @param string $entity_type
 *   The identifier of the entity type.
 * @param \Drupal\node\Entity\Node $entity
 *   The node entity.
 * @param array $form
 *   The submitted form.
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 *   The form state object.
 */
function _oe_content_event_store_organiser_value(string $entity_type, Node $entity, array &$form, FormStateInterface $form_state): void {
  if ($form_state->getValue('is_organiser_internal')) {
    $entity->get('oe_event_organiser_name')->setValue(NULL);
  }
  elseif ($form_state->getValue('is_organiser_internal') === 0) {
    $entity->get('oe_event_organiser_internal')->setValue(NULL);
  }
}
