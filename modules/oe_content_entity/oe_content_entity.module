<?php

/**
 * @file
 * The module file.
 */

declare(strict_types=1);

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Render\Element;

/**
 * Default preprocess function to be ran for all corporate entities.
 *
 * This preprocess sets default values to be passed to the main entity
 * render template.
 *
 * @param array $variables
 *   Render variables.
 * @param string $hook
 *   Hook name, in this case the entity type ID itself.
 */
function oe_content_entity_default_preprocess(array &$variables, string $hook): void {
  $variables['entity'] = $variables['elements']["#{$hook}"];
  $variables['view_mode'] = $variables['elements']['#view_mode'];
  $variables['label'] = $variables['entity']->label();

  // Helpful $content variable for templates.
  foreach (Element::children($variables['elements']) as $key) {
    $variables['content'][$key] = $variables['elements'][$key];
  }
}

/**
 * Default theme suggestion function to be used for all corporate entities.
 *
 * @param array $variables
 *   Render variables.
 * @param string $hook
 *   Theme name.
 *
 * @return array
 *   List of template suggestions.
 */
function oe_content_entity_default_theme_suggestion(array &$variables, string $hook): array {
  // We assume that the entity name and the theme hook are the same.
  $entity_key = '#' . $hook;
  if (isset($variables['elements'][$entity_key])) {
    $entity = $variables['elements'][$entity_key];
  }
  $suggestions = [];
  $sanitized_view_mode = strtr($variables['elements']['#view_mode'], '.', '_');
  $suggestions[] = $hook . '__' . $sanitized_view_mode;
  if (!$entity instanceof EntityInterface) {
    return $suggestions;
  }
  if ($entity->bundle() !== $entity->getEntityTypeId()) {
    $suggestions[] = $hook . '__' . $entity->bundle();
    $suggestions[] = $hook . '__' . $entity->bundle() . '__' . $sanitized_view_mode;
  }

  $suggestions[] = $hook . '__' . $entity->id();
  $suggestions[] = $hook . '__' . $entity->id() . '__' . $sanitized_view_mode;
  return $suggestions;
}
